@page "/login"
@rendermode InteractiveServer
@inject ApplicationDbContext db
@inject NavigationManager navigation
@inject AuthStateService authState
@using Gotorz.Data
@using Gotorz.Models
@using Gotorz.Services
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Identity


<h3>Login</h3>
<div class="container">
    <h3>Login</h3>

    <label>Email:</label>
    <input type="text" required @bind="Email"/>

    <label>Password: </label>
    <input type="password" required @bind="Password"/>


    <p style="color:@loginColor"> @loginText</p>

    <button type="submit" @onclick="LoginCheck"> Login </button>

    <p>Don't have an account? <a href="/register"> Register</a></p>
</div>




@code {
    private string Email { get; set; }
    private string Password { get; set; }

    string loginColor = "black";
    string loginText = "test";

    private async Task LoginCheck()
    {
        var user = await db.Users.FirstOrDefaultAsync(u => u.Email == Email);

        //CHECK EMAIL AND PASSWORD HERE
        if(user == null)
        {
            loginColor = "red";
            loginText = "User not found";
            return;
        }
        var hasher = new PasswordHasher<RegisterModel>();
        var hasherResult = hasher.VerifyHashedPassword(user, user.HashedPassword, Password);

        if(hasherResult == PasswordVerificationResult.Success)
        {
            loginColor = "green";
            loginText = "Succesful login";
            authState.Login(user.Email);
            navigation.NavigateTo("/UserPage");


            // TODO: Add session/token logic here
        }
        else
        {
            loginColor = "red";
            loginText = "Invalid password";
            
        }

    }
}
