@using Gotorz.Models;
@using Gotorz.Services;
@using Gotorz.Data
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms
@rendermode InteractiveServer
@inject ApplicationDbContext db

@page "/flightsandhotels"
@inject TravelAPIService travelAPI

<h3 class="mb-3">Search Flights and Hotels</h3>

<EditForm Model="@searchModel" OnValidSubmit="HandleSearch" FormName ="SearchForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group mb-2">
        <label>Origin Airport Code:</label>
        <InputText class="form-control" @bind-Value="searchModel.Origin" />
    </div>

    <div class="form-group mb-2">
        <label>Destination Airport Code:</label>
        <InputText class="form-control" @bind-Value="searchModel.Destination" />
    </div>

    <div class="form-group mb-2">
        <label>Departure Date:</label>
        <InputDate class="form-control" @bind-Value="searchModel.DepartureDate" />
    </div>

    <div class="form-group mb-2">
        <label>Return Date:</label>
        <InputDate class="form-control" @bind-Value="searchModel.ReturnDate" />
    </div>

    <div class="form-group mb-2">
        <label>Adults:</label>
        <InputNumber class="form-control" @bind-Value="searchModel.Adults" />
    </div>

    <button type="submit" class="btn btn-primary">Search</button>
</EditForm>

<hr />

<p><strong>Debug:</strong> @searchModel.Origin → @searchModel.Destination</p>

<h4>Departure Flights</h4>
<InputRadioGroup @bind-Value="selectedDepartureFlightId">
    @foreach (var flight in DepartureFlights)
    {
        <div class="form-check">
            <InputRadio class="form-check-input" Value="@flight.FlightId" />
            <label class="form-check-label">
                @flight.DepartureAirport → @flight.ArrivalAirport - @flight.Price DKK
            </label>
        </div>
    }
</InputRadioGroup>

<h4>Return Flights</h4>
<InputRadioGroup @bind-Value="selectedReturnFlightId">
    @foreach (var flight in ReturnFlights)
    {
        <div class="form-check">
            <InputRadio class="form-check-input" Value="@flight.FlightId" />
            <label class="form-check-label">
                @flight.DepartureAirport → @flight.ArrivalAirport - @flight.Price DKK
            </label>
        </div>
    }
</InputRadioGroup>

<h4>Hotels</h4>
<InputRadioGroup @bind-Value="selectedHotelId">
    @foreach (var hotel in Hotels)
    {
        <div class="form-check">
            <InputRadio class="form-check-input" Value="@hotel.HotelId" />
            <label class="form-check-label">
                @hotel.HotelName - @hotel.Price DKK
            </label>
        </div>
    }
</InputRadioGroup>

@if (Package.DepartureFlight != null && Package.ReturnFlight != null && Package.Hotel != null)
{
    <hr />
    <h4>Your Travel Package</h4>
    <ul>
        <li>Departure Flight: @Package.DepartureFlight.DepartureAirport → @Package.DepartureFlight.ArrivalAirport - @Package.DepartureFlight.Price DKK</li>
        <li>Return Flight: @Package.ReturnFlight.DepartureAirport → @Package.ReturnFlight.ArrivalAirport - @Package.ReturnFlight.Price DKK</li>
        <li>Hotel: @Package.Hotel.HotelName - @Package.Hotel.Price DKK</li>
    </ul>
    <p><strong>Total Price:</strong> @Package.TotalPrice DKK</p>

    <button class="btn btn-success" @onclick="CreateTravelPackage">Create Package</button>
}

@if (travelPackages.Any())
{
    <hr />
    <h4>Booked Packages</h4>
    <ul>
        @foreach (var p in travelPackages)
        {
            <li>
                @p.DepartureFlight.DepartureAirport → @p.DepartureFlight.ArrivalAirport +
                Return: @p.ReturnFlight.DepartureAirport → @p.ReturnFlight.ArrivalAirport +
                Hotel: @p.Hotel.HotelName - Total: @p.TotalPrice DKK
            </li>
        }
    </ul>
}


@code {
    private string selectedDepartureFlightId;
    private string selectedReturnFlightId;
    private string selectedHotelId;

    private List<TravelPackage> travelPackages = new();

    private TravelPackage Package => new()
    {
        DepartureFlight = DepartureFlights.FirstOrDefault(f => f.FlightId == selectedDepartureFlightId),
        ReturnFlight = ReturnFlights.FirstOrDefault(f => f.FlightId == selectedReturnFlightId),
        Hotel = Hotels.FirstOrDefault(h => h.HotelId == selectedHotelId)
    };

    private async Task CreateTravelPackage()
    {
        if (Package.DepartureFlight != null && Package.ReturnFlight != null && Package.Hotel != null)
        {
            db.TravelPackages.Add(Package);
            await db.SaveChangesAsync();
            travelPackages.Add(Package);
        }
    }

    private SearchModel searchModel = new()
    {
        Origin = "CPH",
        Destination = "LON",
        DepartureDate = DateTime.Today.AddDays(10),
        ReturnDate = DateTime.Today.AddDays(17),
        Adults = 1
    };

    private List<FlightData> DepartureFlights = new();
    private List<FlightData> ReturnFlights = new();
    private List<HotelData> Hotels = new();

    private async Task HandleSearch()
    {
        DepartureFlights = await travelAPI.GetFlightsAsync(
            searchModel.Origin,
            searchModel.Destination,
            searchModel.DepartureDate.ToString("yyyy-MM-dd"),
            searchModel.Adults
        );

        ReturnFlights = await travelAPI.GetFlightsAsync(
            searchModel.Destination,
            searchModel.Origin,
            searchModel.ReturnDate.ToString("yyyy-MM-dd"),
            searchModel.Adults
        );

        Hotels = await travelAPI.GetHotelsAsync(
            searchModel.Destination,
            searchModel.DepartureDate.ToString("yyyy-MM-dd"),
            searchModel.ReturnDate.ToString("yyyy-MM-dd"),
            searchModel.Adults
        );
    }

    public class SearchModel
    {
        [Required]
        public string Origin { get; set; }

        [Required]
        public string Destination { get; set; }

        [Required]
        public DateTime DepartureDate { get; set; }

        [Required]
        public DateTime ReturnDate { get; set; }

        [Range(1, 5)]
        public int Adults { get; set; }
    }
}
